version: "2.4"
services:
  database:
    image: quay.io/azavea/postgis:2.5-postgres11.5-slim
    environment:
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
    healthcheck:
      test: pg_isready -U districtbuilder
      interval: 3s
      timeout: 3s
      retries: 3

  server:
    image: district-builder-server
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
      - AWS_PROFILE=${AWS_PROFILE:-district-builder}
    build:
      context: ./src/server
      dockerfile: Dockerfile
    volumes:
      - ./src/server:/home/node/app/server
      - ./src/shared:/home/node/app/shared
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
      - $HOME/.aws:/root/.aws:ro
    working_dir: /home/node/app/server
    depends_on:
      database:
        condition: service_healthy
    command: yarn start:dev

  client:
    image: node:12-slim
    environment:
      - DB_BASE_URL=http://server:3005
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=250
      - PORT=3003
    volumes:
      - ./:/home/node/app
      - ./src/server/dist/server/src/static:/home/node/app/build
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
    working_dir: /home/node/app
    command: yarn start

  manage:
    image: district-builder-manage
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=districtbuilder
      - POSTGRES_PASSWORD=districtbuilder
      - POSTGRES_DB=districtbuilder
      - AWS_PROFILE=${AWS_PROFILE:-district-builder}
      - NODE_OPTIONS=--max-old-space-size=14336
    build:
      context: ./src/manage
      dockerfile: Dockerfile
    volumes:
      - ./src/server:/home/node/app/server
      - ./src/shared:/home/node/app/shared
      - ./src/manage:/home/node/app/manage
      - $HOME/.cache/district-builder:/usr/local/share/.cache/yarn
      - $HOME/.aws:/root/.aws:ro
    working_dir: /home/node/app/manage
    depends_on:
      database:
        condition: service_healthy
    command: bash
